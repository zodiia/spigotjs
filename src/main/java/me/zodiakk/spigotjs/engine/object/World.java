package me.zodiakk.spigotjs.engine.object;

public interface World extends ApiElement {
    public boolean canGenerateStructures();
    public boolean createExplosion(Number x, Number y, Number z, Number power);
    public boolean createExplosion(Number x, Number y, Number z, Number power, boolean setFire);
    public boolean createExplosion(Number x, Number y, Number z, Number power, boolean setFire, boolean breakBlocks);
    public boolean createExplosion(Location location, Number power);
    public boolean createExplosion(Location location, boolean setFire);
    public boolean createExplosion(Location location, boolean setFire, boolean breakBlocks);
    public void dropItem(Location location, ItemStack item);
    public void dropItemNaturally(Location location, ItemStack item);
    public boolean generateTree(Location location, String treeType);
    public boolean getAllowAnimals();
    public boolean getAllowMonsters();
    public boolean getAmbientSpawnLimit();
    public boolean getAnimalSpawnLimit();
    public String getBiome(Number x, Number z);
    public String getBiome(Location location);
    public Block getBlock(Number x, Number y, Number z);
    public Block getBlock(Location location);
    public String getDifficulty();
    public Entity[] getEntities();
    public Entity[] getEntities(String type);
    public Entity[] getEntities(String[] types);
    public String getEnvironment();
    public Number getFullTime();
    public String[] getGameRules();
    public String getGameRuleValue(String value);
    public Block getHighestBlockAt(Number x, Number z);
    public Block getHighestBlockAt(Location location);
    public Number getHighestBlockYAt(Number x, Number z);
    public Number getHighestBlockYAt(Location location);
    public Number getHumidity(Number x, Number z);
    public Number getHumidity(Location location);
    public boolean getKeepSpawnInMemory();
    public LivingEntity[] getLivingEntities();
    public Number getMaxHeight();
    public Number getMonsterSpawnLimit();
    public String getName();
    public Entity[] getNearbyEntities(Location location, Number x, Number y, Number z);
    public Entity[] getNearbyEntities(Location location, Number distance);
    public Player[] getPlayers();
    public boolean getPvp();
    public Number getSeaLevel();
    public Number getSeed();
    public Location getSpawnLocation();
    public Number getTemperature(Number x, Number z);
    public Number getTemperature(Location location);
    public Number getThunderDuration();
    public Number getTicksPerAnimalSpawns();
    public Number getTicksPerMonsterSpawns();
    public Number getTime();
    public String getId();
    public Number getWaterAnimalSpawnLimit();
    public Number getWeatherDuration();
    public String getType();
    public boolean hasStorm();
    public boolean hasAutoSave();
    public boolean isGameRule(String gameRule);
    public boolean isThundering();
    public void loadChunk(Number chunkX, Number chunkZ);
    public void loadChunk(Number chunkX, Number chunkZ, boolean generate);
    public void playSound(Location location, String sound, Number volume, Number pitch);
    public boolean regenerateChunk(Number chunkX, Number chunkZ);
    public void save();
    public void setAmbientSpawnLimit(Number limit);
    public void setAnimalSpawnLimit(Number limit);
    public void setAutoSave(boolean value);
    public void setBiome(Number x, Number z, String biome);
    public void setBiome(Location location, String biome);
    public void setDifficulty(String difficulty);
    public void setFullTime(Number time);
    public void setGameRuleValue(String rule, String value);
    public void setKeepSpawnInMemory(boolean keepLoaded);
    public void setMonsterSpawnLimit(Number limit);
    public void setPvp(boolean pvp);
    public void setSpawnFlags(boolean allowMonsters, boolean allowAnimals);
    public boolean setSpawnLocation(Number x, Number y, Number z);
    public boolean setSpawnLocation(Location location);
    public void setStorm(boolean hasStorm);
    public void setThunderDuration(Number duration);
    public void setThundering(boolean thundering);
    public void setTicksPerAnimalSpawn(Number ticks);
    public void setTicksPerMonsterSpawn(Number ticks);
    public void setTime(Number time);
    public void setWaterAnimalSpawnLimit(Number limit);
    public void setWeatherDuration(Number duration);
    public Entity spawnEntity(Number x, Number y, Number z, String entityType);
    public Entity spawnEntity(Location location, String entityType);
    public void spawnArrow(Location location, Number velocityX, Number velocityY, Number velocityZ, Number speed, Number spread);
    public void strikeLightning(Number x, Number y, Number z);
    public void strikeLightning(Location location);
    public void strikeLightningEffect(Number x, Number y, Number z);
    public void strikeLightningEffect(Location location);
    public boolean unloadChunk(Number chunkX, Number chunkZ);
    public boolean unloadChunk(Number chunkX, Number chunkZ, boolean save);
    public boolean unloadChunk(Number chunkX, Number chunkZ, boolean save, boolean safe);
    public boolean unloadChunkRequest(Number chunkX, Number chunkZ);
    public boolean unloadChunkRequest(Number chunkX, Number chunkZ, boolean safe);
}
